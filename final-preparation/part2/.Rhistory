setwd("D:/work/project-rockets/final-preparation/part2")
data<-read.csv("new_correlation.csv")
data
attach(data)
library(ggplot2)
library(ggpubr)
library(rstatix)
theme_set(ggpubr::theme_pubr()+
theme(legend.position = "top"))
p4<- ggscatter(data, x = "mig", y = "population1",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p4
install.packages("jsonlite")
library(jsonlite)
install.packages("rjson")
library(rjson)
install.packages("RJSONIO")
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
install.packages("plyr")
install.packages("plyr")
library(plyr)
library(dplyr)
library(dplyr)
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
install.packages("sf")
library(sf)
library(rgdal)
install.packages("geojsonio")
library(geojsonio)
library(geojsonio)
install.packages("sp")
install.packages("sp")
library(sp)
install.packages("ggthemes")
install.packages("ggthemes")
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
x
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
totalp1=data.frame(id=map$id,pnum=map$ccf,
correlation=cut(map$ccf,breaks=c(0,0.3,0.4,0.5,0.6,1),
labels=c("<0.3","0.3-0.4","0.4-0.5","0.5-0.6",">=0.6"),
order = TRUE,include.lowest = T,right = F))
ttp1<-merge.data.frame(prov_map,totalp1,by.prov_map="id",by.totalp1="id")
ggplot()+
geom_polygon(data=ttp1,aes(x=long,y=lat,group=group,
fill=correlation),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(5,"Greens"))
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
x<-readOGR("省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("map.csv")
totalp1=data.frame(id=map$id,pnum=map$ccf,
correlation=cut(map$ccf,breaks=c(0,0.3,0.4,0.5,0.6,1),
labels=c("<0.3","0.3-0.4","0.4-0.5","0.5-0.6",">=0.6"),
order = TRUE,include.lowest = T,right = F))
ttp1<-merge.data.frame(prov_map,totalp1,by.prov_map="id",by.totalp1="id")
ggplot()+
geom_polygon(data=ttp1,aes(x=long,y=lat,group=group,
fill=correlation),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(5,"Greens"))
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,ncol=5)
a
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,ncol=5)
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,ncol=5)
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,nrow=5)
a
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,nrow=5,byrow = T)
a
ev<-eigen(a)
ev$val
ev$vec
a<- matrix(c(1,4,2,3,5,0.25,1,0.33,0.5,2,0.5,3,1,2,4,0.33,2,0.5,1,3,0.2,0.5,0.25,0.33,1),ncol=5,nrow=5,byrow = T)
a
ev<-eigen(a)
ev$val
ev$vec
a<- matrix(c(1,4,2,3,5,1/5,1,1/3,1/2,2,1/2,3,1,2,4,1/3,2,1/2,1,3,1/5,1/2,1/4,1/3,1),ncol=5,nrow=5,byrow = T)
a
ev<-eigen(a)
ev$val
ev$vec
a<- matrix(c(1,4,2,3,5,1/4,1,1/3,1/2,2,1/2,3,1,2,4,1/3,2,1/2,1,3,1/5,1/2,1/4,1/3,1),ncol=5,nrow=5,byrow = T)
a
a
a
ev<-eigen(a)
ev$val
ev$vec
max(ev$val)
a<- matrix(c(1,5,3,3,5,0.2,1,3,3,5,0.33,0.2,1,1,5,0.33,0.33,1,1,5,0.2,0.2,0.2,0.2,1),ncol=5,nrow=5,byrow = T)
ev<-eigen(a)
a
ev$val
ev$vec
ev$val[1]
ev$val[1]-5
b=(ev$val[1]-5)/4
b
b/1.12
library(REmap)
data <- read.csv(file="./data/data.csv",header=F)
names(data) <- c("names","values")
remapC(data,
maptype = 'china',
color = c('#CD0000','#FFEC8B'),
theme = get_theme("dark"),
title = "全国疫情地图",
subtitle="2月29日累计确诊人数",
)
#相关系数图
data<-read.csv("./data/new_correlation.csv")
attach(data)
library(ggplot2)
library(ggpubr)
library(rstatix)
library(ggpmisc)
theme_set(ggpubr::theme_pubr()+
theme(legend.position = "top"))
library(ggpubr)
p1<- ggscatter(data, x = "mig", y = "distance",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p2<- ggscatter(data, x = "mig", y = "train",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p3<- ggscatter(data, x = "mig", y = "GDP",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p4<- ggscatter(data, x = "mig", y = "population",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
ggarrange(p1,p2,p3,p4,ncol=2,nrow=2,labels=c("A","B","C","D"))
#分类图
data <- read.csv("./data/correlation.csv")
#分类图
data <- read.csv("./data/new_correlation.csv")
library(ggplot2)
library(ggrepel)
ggplot(data)+ geom_point(aes(lag, ccf), color="grey", size=3)+
geom_label_repel(aes(lag, ccf, fill=factor(cluster),
label=province), fontface="bold", color="white",
box.padding=unit(0.35, "lines"), point.padding=unit(0.5, "lines"),
segment.colour = "grey50")+ theme_classic(base_size = 16)
#滞后地图
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(dplyr)
library(rgdal)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
library(rgdal)
x<-readOGR("./data/省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("./data/map.csv")
totalp=data.frame(id=map$id,pnum=map$lag,
Timelag=cut(map$lag,breaks=c(0,11,21,30),
labels=c("<=10","11-20",">=21"),
order = TRUE,include.lowest = T,right = F))
ttp<-merge.data.frame(prov_map,totalp,by.prov_map="id",by.totalp="id")
ggplot()+
geom_polygon(data=ttp,aes(x=long,y=lat,group=group,
fill=Timelag),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(3,"Blues"))
#相关系数地图
library(jsonlite)
library(rjson)
library(RJSONIO)
library(ggplot2)
library(RColorBrewer)
library(lubridate)
library(plyr)
library(sf)
library(geojsonio)
library(sp)
library(ggthemes)
library(rgdal)
x<-readOGR("./data/省级行政区.shp",stringsAsFactors=FALSE,encoding="UTF-8")
prov_map<-fortify(x)
map=read.csv("./data/map.csv")
totalp1=data.frame(id=map$id,pnum=des_map$ccf,
correlation=cut(des_map$ccf,breaks=c(0,0.3,0.4,0.5,0.6,1),
labels=c("<0.3","0.3-0.4","0.4-0.5","0.5-0.6",">=0.6"),
order = TRUE,include.lowest = T,right = F))
totalp1=data.frame(id=map$id,pnum=map$ccf,
correlation=cut(map$ccf,breaks=c(0,0.3,0.4,0.5,0.6,1),
labels=c("<0.3","0.3-0.4","0.4-0.5","0.5-0.6",">=0.6"),
order = TRUE,include.lowest = T,right = F))
ttp1<-merge.data.frame(prov_map,totalp1,by.prov_map="id",by.totalp1="id")
ggplot()+
geom_polygon(data=ttp1,aes(x=long,y=lat,group=group,
fill=correlation),colour="black",size=0.25)+
scale_fill_manual(values = brewer.pal(5,"Greens"))
#相关系数图
data<-read.csv("./data/new_correlation.csv")
attach(data)
library(ggplot2)
library(ggpubr)
library(rstatix)
library(ggpmisc)
theme_set(ggpubr::theme_pubr()+
theme(legend.position = "top"))
library(ggpubr)
p1<- ggscatter(data, x = "mig", y = "distance",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p2<- ggscatter(data, x = "mig", y = "train",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p3<- ggscatter(data, x = "mig", y = "GDP",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
p4<- ggscatter(data, x = "mig", y = "population",color = "black",
add = "reg.line",conf.int = TRUE,
add.params = list(fill = "lightgray")
)+
stat_cor(method = "pearson",
label.x = 3, label.y = 30)
ggarrange(p1,p2,p3,p4,ncol=2,nrow=2,labels=c("A","B","C","D"))
